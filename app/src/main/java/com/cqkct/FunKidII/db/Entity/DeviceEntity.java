package com.cqkct.FunKidII.db.Entity;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 

import android.text.TextUtils;

import com.cqkct.FunKidII.Bean.BaseBean;
import com.google.protobuf.InvalidProtocolBufferException;

import org.greenrobot.greendao.annotation.Entity;
import org.greenrobot.greendao.annotation.Generated;
import org.greenrobot.greendao.annotation.Id;
import org.greenrobot.greendao.annotation.Keep;
import org.greenrobot.greendao.annotation.Transient;
import org.greenrobot.greendao.annotation.Unique;

import java.io.Serializable;

import protocol.Message;

/**
 * Entity mapped to table DEVICE_BEAN.
 */
@Entity
public class DeviceEntity implements BaseBean, Serializable {

    private static final long serialVersionUID = 3565646190325496053L;
    @Id(autoincrement = true)
    private Long id;
    @Unique
    private String deviceId;
    private String model;
    private Long hw_feature;
    private String hw_ver;
    private String fw_ver;
    private String sw_ver;
    private Long sw_feature;
    private int locationMode;
    private String familyGroup;

    private byte[] babyData;
    private byte[] functionsData;
    private byte[] sysInfoData;
    private byte[] companyInfoData;
    private byte[] funcModuleInfoData;
    private byte[] schoolGuardData;
    private byte[] lastPositionData;
    private String custom_model;

    private int batteryPercent;
    private int batteryVoltage;
    private int batteryLevel;
    private int stepCount;
    private long sensorDataTime;
    private long unbindClearLevel;

    @Transient
    private Message.Baby baby;
    @Transient
    private Message.Functions functions;
    @Transient
    private Message.DeviceSysInfo sysInfo;
    @Transient
    private Message.CompanyInfo companyInfo;
    @Transient
    private Message.FuncModuleInfo funcModuleInfo;
    @Transient
    private Message.SchoolGuard schoolGuard;
    @Transient
    private Message.Position lastPosition;



    @Generated(hash = 738811544)
    public DeviceEntity(Long id, String deviceId, String model, Long hw_feature, String hw_ver, String fw_ver,
            String sw_ver, Long sw_feature, int locationMode, String familyGroup, byte[] babyData,
            byte[] functionsData, byte[] sysInfoData, byte[] companyInfoData, byte[] funcModuleInfoData,
            byte[] schoolGuardData, byte[] lastPositionData, String custom_model, int batteryPercent,
            int batteryVoltage, int batteryLevel, int stepCount, long sensorDataTime, long unbindClearLevel) {
        this.id = id;
        this.deviceId = deviceId;
        this.model = model;
        this.hw_feature = hw_feature;
        this.hw_ver = hw_ver;
        this.fw_ver = fw_ver;
        this.sw_ver = sw_ver;
        this.sw_feature = sw_feature;
        this.locationMode = locationMode;
        this.familyGroup = familyGroup;
        this.babyData = babyData;
        this.functionsData = functionsData;
        this.sysInfoData = sysInfoData;
        this.companyInfoData = companyInfoData;
        this.funcModuleInfoData = funcModuleInfoData;
        this.schoolGuardData = schoolGuardData;
        this.lastPositionData = lastPositionData;
        this.custom_model = custom_model;
        this.batteryPercent = batteryPercent;
        this.batteryVoltage = batteryVoltage;
        this.batteryLevel = batteryLevel;
        this.stepCount = stepCount;
        this.sensorDataTime = sensorDataTime;
        this.unbindClearLevel = unbindClearLevel;
    }

    @Generated(hash = 1449836520)
    public DeviceEntity() {
    }


    // KEEP
    @Override
    @Keep
    public Long getId() {
        return id;
    }

    @Keep
    public void setBaby(Message.Baby baby) {
        setBaby(baby, false);
    }

    @Keep
    public void setBaby(Message.Baby baby, boolean fullReplace) {
        if (baby != null) {
            Message.Baby.Builder babyInDb = getBaby().toBuilder();
            if (fullReplace || !TextUtils.isEmpty(baby.getAvatar())) {
                babyInDb.setAvatar(baby.getAvatar());
            }
            if (fullReplace || !TextUtils.isEmpty(baby.getName())) {
                babyInDb.setName(baby.getName());
            }
            if (fullReplace || !TextUtils.isEmpty(baby.getPhone())) {
                babyInDb.setPhone(baby.getPhone());
            }
            if (fullReplace || baby.getSex() != Message.Baby.Sex.UNKNOWN) {
                babyInDb.setSex(baby.getSex());
            }
            if (fullReplace || baby.getBirthday() != 0) {
                babyInDb.setBirthday(baby.getBirthday());
            }
            if (fullReplace || baby.getGrade() != 0) {
                babyInDb.setGrade(baby.getGrade());
            }
            if (fullReplace || baby.getHeight() != 0) {
                babyInDb.setHeight(baby.getHeight());
            }
            if (fullReplace || baby.getWeight() != 0) {
                babyInDb.setWeight(baby.getWeight());
            }
            this.baby = babyInDb.build();
            setBabyData(this.baby.toByteArray());
        } else {
            this.baby = null;
            setBabyData(new byte[0]);
        }
    }

    @Keep
    public Message.Baby getBaby() {
        if (baby == null) {
            byte[] data = getBabyData();
            if (data == null) {
                data = new byte[0];
            }
            try {
                baby = Message.Baby.parseFrom(data);
            } catch (InvalidProtocolBufferException e) {
                baby = Message.Baby.newBuilder().build();
            }
        }
        return baby;
    }

    @Keep
    public void setFunctions(Message.Functions functions) {
        if (functions != null) {
            Message.Functions.Builder funcsInDb = getFunctions().toBuilder();
            if ((functions.getChangedField() & Message.Functions.FieldFlag.REJECT_STRANGER_CALL_IN_VALUE) != 0) {
                funcsInDb.setRejectStrangerCallIn(functions.getRejectStrangerCallIn());
            }
            if ((functions.getChangedField() & Message.Functions.FieldFlag.REJECT_STRANGER_CALL_OUT_VALUE) != 0) {
                funcsInDb.setRejectStrangerCallOut(functions.getRejectStrangerCallOut());
            }
            if ((functions.getChangedField() & Message.Functions.FieldFlag.TIMER_POWER_ON_OFF_VALUE) != 0) {
                funcsInDb.setTimerPowerOnOff(functions.getTimerPowerOnOff());
            }
            if ((functions.getChangedField() & Message.Functions.FieldFlag.INUNDATE_REMIND_VALUE) != 0) {
                funcsInDb.setInundateRemind(functions.getInundateRemind());
            }
            if ((functions.getChangedField() & Message.Functions.FieldFlag.SAVE_POWER_MODE_VALUE) != 0) {
                funcsInDb.setSavePowerMode(functions.getSavePowerMode());
            }
            if ((functions.getChangedField() & Message.Functions.FieldFlag.CALL_POSITION_VALUE) != 0) {
                funcsInDb.setCallPosition(functions.getCallPosition());
            }
            if ((functions.getChangedField() & Message.Functions.FieldFlag.WATCH_SET_LIGHT_VALUE) != 0) {
                funcsInDb.setWatchSetLight(functions.getWatchSetLight());
            }
            if ((functions.getChangedField() & Message.Functions.FieldFlag.WATCH_REPORT_LOST_VALUE) != 0) {
                funcsInDb.setWatchReportLost(functions.getWatchReportLost());
            }
            if ((functions.getChangedField() & Message.Functions.FieldFlag.TIMER_POWER_ON_VALUE) != 0) {
                funcsInDb.setTimerPowerOn(functions.getTimerPowerOn());
            }
            if ((functions.getChangedField() & Message.Functions.FieldFlag.TIMER_POWER_OFF_VALUE) != 0) {
                funcsInDb.setTimerPowerOff(functions.getTimerPowerOff());
            }
            if ((functions.getChangedField() & Message.Functions.FieldFlag.ENABLE_CALCULATOR_VALUE) != 0) {
                funcsInDb.setEnableCalculator(functions.getEnableCalculator());
            }
            this.functions = funcsInDb.build();
            setFunctionsData(this.functions.toByteArray());
        } else {
            this.functions = null;
            setFunctionsData(new byte[0]);
        }
    }

    @Keep
    public Message.Functions getFunctions() {
        if (functions == null) {
            byte[] data = getFunctionsData();
            if (data == null) {
                data = new byte[0];
            }
            try {
                functions = Message.Functions.parseFrom(data);
            } catch (InvalidProtocolBufferException e) {
                functions = Message.Functions.newBuilder().build();
            }
        }
        return functions;
    }

    @Keep
    public Message.DeviceSysInfo getSysInfo() {
        if (sysInfo == null) {
            byte[] data = getSysInfoData();
            if (data == null) {
                data = new byte[0];
            }
            try {
                sysInfo = Message.DeviceSysInfo.parseFrom(data);
            } catch (InvalidProtocolBufferException e) {
                sysInfo = Message.DeviceSysInfo.newBuilder().build();
            }
        }
        return sysInfo;
    }

    @Keep
    public void setSysInfo(Message.DeviceSysInfo sysInfo) {
        setSysInfo(sysInfo, false);
    }

    @Keep
    public void setSysInfo(Message.DeviceSysInfo sysInfo, boolean fullReplace) {
        if (sysInfo != null) {
            Message.DeviceSysInfo.Builder sysInfoInDb = getSysInfo().toBuilder();
            if (fullReplace || !TextUtils.isEmpty(sysInfo.getModel())) {
                sysInfoInDb.setModel(sysInfo.getModel());
            }
            if (fullReplace || sysInfo.getHwFeature() != 0) {
                sysInfoInDb.setHwFeature(sysInfo.getHwFeature());
            }
            if (fullReplace || !TextUtils.isEmpty(sysInfo.getHwVer())) {
                sysInfoInDb.setHwVer(sysInfo.getHwVer());
            }
            if (fullReplace || !TextUtils.isEmpty(sysInfo.getFwVer())) {
                sysInfoInDb.setFwVer(sysInfo.getFwVer());
            }
            if (fullReplace || !TextUtils.isEmpty(sysInfo.getSwVer())) {
                sysInfoInDb.setSwVer(sysInfo.getSwVer());
            }
            if (fullReplace || sysInfo.getSwFeature() != 0) {
                sysInfoInDb.setSwFeature(sysInfo.getSwFeature());
            }
            if (fullReplace) {
                sysInfoInDb.setLimit(sysInfo.getLimit());
            } else {
                Message.DeviceLimit.Builder limitInDb = sysInfoInDb.getLimitBuilder();
                Message.DeviceLimit limit = sysInfo.getLimit();
                if (limit.getSecondsOfLight() != 0) {
                    limitInDb.setSecondsOfLight(limit.getSecondsOfLight());
                }
                if (limit.getCountOfContact() != 0) {
                    limitInDb.setCountOfContact(limit.getCountOfContact());
                }
                if (limit.getCountOfSOS() != 0) {
                    limitInDb.setCountOfSOS(limit.getCountOfSOS());
                }
                if (limit.getCountOfAlarmClock() != 0) {
                    limitInDb.setCountOfAlarmClock(limit.getCountOfAlarmClock());
                }
                if (limit.getCountOfClassDisable() != 0) {
                    limitInDb.setCountOfClassDisable(limit.getCountOfClassDisable());
                }
                if (limit.getCountOfFence() != 0) {
                    limitInDb.setCountOfFence(limit.getCountOfFence());
                }
                sysInfoInDb.setLimit(limitInDb);
            }
            if (fullReplace || !TextUtils.isEmpty(sysInfo.getCustomModel())) {
                sysInfoInDb.setCustomModel(sysInfo.getCustomModel());
            }
            this.sysInfo = sysInfoInDb.build();
            setSysInfoData(this.sysInfo.toByteArray());
        } else {
            setSysInfoData(new byte[0]);
        }
    }

    @Keep
    public Message.CompanyInfo getCompanyInfo() {
        if (companyInfo == null) {
            byte[] data = getCompanyInfoData();
            if (data == null) {
                data = new byte[0];
            }
            try {
                companyInfo = Message.CompanyInfo.parseFrom(data);
            } catch (InvalidProtocolBufferException e) {
                companyInfo = Message.CompanyInfo.newBuilder().build();
            }
        }
        return companyInfo;
    }

    @Keep
    public void setCompanyInfo(Message.CompanyInfo companyInfo) {
        this.companyInfo = companyInfo;
        if (this.companyInfo == null) {
            setCompanyInfoData(new byte[0]);
        } else {
            setCompanyInfoData(this.companyInfo.toByteArray());
        }
    }

    @Keep
    public Message.FuncModuleInfo getFuncModuleInfo() {
        if (funcModuleInfo == null) {
            byte[] data = getFuncModuleInfoData();
            if (data == null) {
                data = new byte[0];
            }
            try {
                funcModuleInfo = Message.FuncModuleInfo.parseFrom(data);
            } catch (InvalidProtocolBufferException e) {
                funcModuleInfo = Message.FuncModuleInfo.newBuilder().build();
            }
        }
        return funcModuleInfo;
    }

    @Keep
    public void setFuncModuleInfo(Message.FuncModuleInfo funcModuleInfo) {
        this.funcModuleInfo = funcModuleInfo;
        if (this.funcModuleInfo == null) {
            setFuncModuleInfoData(new byte[0]);
        } else {
            setFuncModuleInfoData(this.funcModuleInfo.toByteArray());
        }
    }

    @Keep
    public Message.SchoolGuard getSchoolGuard() {
        if (schoolGuard == null) {
            byte[] data = getSchoolGuardData();
            if (data == null) {
                data = new byte[0];
            }
            try {
                schoolGuard = Message.SchoolGuard.parseFrom(data);
            } catch (InvalidProtocolBufferException e) {
                schoolGuard = Message.SchoolGuard.newBuilder().build();
            }
        }
        return schoolGuard;
    }

    @Keep
    public void setSchoolGuard(Message.SchoolGuard schoolGuard) {
        this.schoolGuard = schoolGuard;
        if (this.schoolGuard == null) {
            setSchoolGuardData(new byte[0]);
        } else {
            setSchoolGuardData(this.schoolGuard.toByteArray());
        }
    }

    @Keep
    public Message.Position getLastPosition() {
        if (lastPosition == null) {
            byte[] data = getLastPositionData();
            if (data == null) {
                data = new byte[0];
            }
            try {
                lastPosition = Message.Position.parseFrom(data);
            } catch (InvalidProtocolBufferException e) {
                lastPosition = Message.Position.newBuilder().build();
            }
        }
        return lastPosition;
    }

    @Keep
    public void setLastPosition(Message.Position position) {
        this.lastPosition = position;
        if (this.lastPosition != null) {
            setLastPositionData(position.toByteArray());
        } else {
            setLastPositionData(new byte[0]);
        }
    }
    // KEEP END

    public void setId(Long id) {
        this.id = id;
    }

    public String getDeviceId() {
        return this.deviceId;
    }

    public void setDeviceId(String deviceId) {
        this.deviceId = deviceId;
    }

    public String getModel() {
        return this.model;
    }

    public void setModel(String model) {
        this.model = model;
    }

    public Long getHw_feature() {
        return this.hw_feature;
    }

    public void setHw_feature(Long hw_feature) {
        this.hw_feature = hw_feature;
    }

    public String getHw_ver() {
        return this.hw_ver;
    }

    public void setHw_ver(String hw_ver) {
        this.hw_ver = hw_ver;
    }

    public String getFw_ver() {
        return this.fw_ver;
    }

    public void setFw_ver(String fw_ver) {
        this.fw_ver = fw_ver;
    }

    public String getSw_ver() {
        return this.sw_ver;
    }

    public void setSw_ver(String sw_ver) {
        this.sw_ver = sw_ver;
    }

    public Long getSw_feature() {
        return this.sw_feature;
    }

    public void setSw_feature(Long sw_feature) {
        this.sw_feature = sw_feature;
    }

    public int getLocationMode() {
        return this.locationMode;
    }

    public void setLocationMode(int locationMode) {
        this.locationMode = locationMode;
    }

    public String getFamilyGroup() {
        return this.familyGroup;
    }

    public void setFamilyGroup(String familyGroup) {
        this.familyGroup = familyGroup;
    }

    public byte[] getBabyData() {
        return this.babyData;
    }

    public void setBabyData(byte[] babyData) {
        this.babyData = babyData;
    }

    public byte[] getFunctionsData() {
        return this.functionsData;
    }

    public void setFunctionsData(byte[] functionsData) {
        this.functionsData = functionsData;
    }

    public byte[] getSysInfoData() {
        return this.sysInfoData;
    }

    public void setSysInfoData(byte[] sysInfoData) {
        this.sysInfoData = sysInfoData;
    }

    public byte[] getCompanyInfoData() {
        return this.companyInfoData;
    }

    public void setCompanyInfoData(byte[] companyInfoData) {
        this.companyInfoData = companyInfoData;
    }

    public byte[] getFuncModuleInfoData() {
        return this.funcModuleInfoData;
    }

    public void setFuncModuleInfoData(byte[] funcModuleInfoData) {
        this.funcModuleInfoData = funcModuleInfoData;
    }

    public byte[] getSchoolGuardData() {
        return this.schoolGuardData;
    }

    public void setSchoolGuardData(byte[] schoolGuardData) {
        this.schoolGuardData = schoolGuardData;
    }

    public byte[] getLastPositionData() {
        return this.lastPositionData;
    }

    public void setLastPositionData(byte[] lastPositionData) {
        this.lastPositionData = lastPositionData;
    }

    public String getCustom_model() {
        return this.custom_model;
    }

    public void setCustom_model(String custom_model) {
        this.custom_model = custom_model;
    }

    public int getBatteryPercent() {
        return this.batteryPercent;
    }

    public void setBatteryPercent(int batteryPercent) {
        this.batteryPercent = batteryPercent;
    }

    public int getBatteryVoltage() {
        return this.batteryVoltage;
    }

    public void setBatteryVoltage(int batteryVoltage) {
        this.batteryVoltage = batteryVoltage;
    }

    public int getBatteryLevel() {
        return this.batteryLevel;
    }

    public void setBatteryLevel(int batteryLevel) {
        this.batteryLevel = batteryLevel;
    }

    public int getStepCount() {
        return this.stepCount;
    }

    public void setStepCount(int stepCount) {
        this.stepCount = stepCount;
    }

    public long getSensorDataTime() {
        return this.sensorDataTime;
    }

    public void setSensorDataTime(long sensorDataTime) {
        this.sensorDataTime = sensorDataTime;
    }

    public long getUnbindClearLevel() {
        return this.unbindClearLevel;
    }

    public void setUnbindClearLevel(long unbindClearLevel) {
        this.unbindClearLevel = unbindClearLevel;
    }
}


