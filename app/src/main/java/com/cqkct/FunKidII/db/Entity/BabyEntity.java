package com.cqkct.FunKidII.db.Entity;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 

import android.text.TextUtils;

import com.cqkct.FunKidII.Bean.BaseBean;
import com.cqkct.FunKidII.Utils.RelationUtils;

import org.greenrobot.greendao.annotation.Entity;
import org.greenrobot.greendao.annotation.Generated;
import org.greenrobot.greendao.annotation.Id;
import org.greenrobot.greendao.annotation.Keep;
import org.greenrobot.greendao.annotation.NotNull;

import java.io.Serializable;

/**
 * Entity mapped to table BABY_BEAN.
 */
@Entity
public class BabyEntity implements BaseBean, Serializable {

    private static final long serialVersionUID = 1970473957983493462L;
    @Id(autoincrement = true)
    private Long id;

    @NotNull
    private String userId;
    @NotNull
    private String deviceId;
    @NotNull
    private int permission;
    @NotNull
    private String relation;
    private String babyAvatar;
    private String name;
    private String phone;
    private int sex;
    private long birthday;
    private int grade;
    private int height;
    private int weight;
    private String userAvatar;
    private String familyGroup;
    private boolean smsAgentEnabled;
    private int notificationChannel;
    private boolean is_select;


    @Generated(hash = 351052695)
    public BabyEntity(Long id, @NotNull String userId, @NotNull String deviceId, int permission,
            @NotNull String relation, String babyAvatar, String name, String phone, int sex,
            long birthday, int grade, int height, int weight, String userAvatar, String familyGroup,
            boolean smsAgentEnabled, int notificationChannel, boolean is_select) {
        this.id = id;
        this.userId = userId;
        this.deviceId = deviceId;
        this.permission = permission;
        this.relation = relation;
        this.babyAvatar = babyAvatar;
        this.name = name;
        this.phone = phone;
        this.sex = sex;
        this.birthday = birthday;
        this.grade = grade;
        this.height = height;
        this.weight = weight;
        this.userAvatar = userAvatar;
        this.familyGroup = familyGroup;
        this.smsAgentEnabled = smsAgentEnabled;
        this.notificationChannel = notificationChannel;
        this.is_select = is_select;
    }

    @Generated(hash = 1846426286)
    public BabyEntity() {
    }


    // KEEP
    @Override
    @Keep
    public Long getId() {
        return id;
    }

    @Keep
    public static boolean equals(BabyEntity b1, BabyEntity b2) {
        if (b1 == b2) {
            return true;
        }
        if (b1 == null) {
            return false;
        } else if (b2 == null) {
            return false;
        }

        if (!b1.getUserId().equals(b2.getUserId())
                || !b1.getDeviceId().equals(b2.getDeviceId())) {
            return false;
        }

        if (b1.getPermission() != b2.getPermission())
            return false;

        if (TextUtils.isEmpty(b1.getRelation())) {
            if (!TextUtils.isEmpty(b2.getRelation()))
                return false;
        } else if (!b1.getRelation().equals(b2.getRelation())) {
            return false;
        }

        if (TextUtils.isEmpty(b1.getName())) {
            if (!TextUtils.isEmpty(b2.getName()))
                return false;
        } else if (!b1.getName().equals(b2.getName())) {
            return false;
        }

        if (TextUtils.isEmpty(b1.getPhone())) {
            if (!TextUtils.isEmpty(b2.getPhone()))
                return false;
        } else if (!b1.getPhone().equals(b2.getPhone())) {
            return false;
        }

        if (b1.getSex() != b2.getSex())
            return false;

        if (b1.getBirthday() != b2.getBirthday())
            return false;

        if (b1.getGrade() != b2.getGrade())
            return false;

        if (b1.getHeight() != b2.getHeight())
            return false;

        if (b1.getWeight() != b2.getWeight())
            return false;

        if (TextUtils.isEmpty(b1.getBabyAvatar())) {
            if (!TextUtils.isEmpty(b2.getBabyAvatar()))
                return false;
        } else if (!b1.getBabyAvatar().equals(b2.getBabyAvatar())) {
            return false;
        }

        if (RelationUtils.isCustomRelation(b1.getRelation())) {
            if (TextUtils.isEmpty(b1.getUserAvatar())) {
                if (!TextUtils.isEmpty(b2.getUserAvatar()))
                    return false;
            } else if (!b1.getUserAvatar().equals(b2.getUserAvatar())) {
                return false;
            }
        }

        if (TextUtils.isEmpty(b1.getFamilyGroup())) {
            if (!TextUtils.isEmpty(b2.getFamilyGroup()))
                return false;
        } else if (!b1.getFamilyGroup().equals(b2.getFamilyGroup())) {
            return false;
        }

        if (b1.getSmsAgentEnabled() != b2.getSmsAgentEnabled())
            return false;

        if (b1.getNotificationChannel() != b2.getNotificationChannel())
            return false;

        return true;
    }
    // KEEP END

    public void setId(Long id) {
        this.id = id;
    }

    public String getUserId() {
        return this.userId;
    }

    public void setUserId(String userId) {
        this.userId = userId;
    }

    public String getDeviceId() {
        return this.deviceId;
    }

    public void setDeviceId(String deviceId) {
        this.deviceId = deviceId;
    }

    public int getPermission() {
        return this.permission;
    }

    public void setPermission(int permission) {
        this.permission = permission;
    }

    public String getRelation() {
        return this.relation;
    }

    public void setRelation(String relation) {
        this.relation = relation;
    }

    public String getBabyAvatar() {
        return this.babyAvatar;
    }

    public void setBabyAvatar(String babyAvatar) {
        this.babyAvatar = babyAvatar;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getPhone() {
        return this.phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    public int getSex() {
        return this.sex;
    }

    public void setSex(int sex) {
        this.sex = sex;
    }

    public long getBirthday() {
        return this.birthday;
    }

    public void setBirthday(long birthday) {
        this.birthday = birthday;
    }

    public int getGrade() {
        return this.grade;
    }

    public void setGrade(int grade) {
        this.grade = grade;
    }

    public int getHeight() {
        return this.height;
    }

    public void setHeight(int height) {
        this.height = height;
    }

    public int getWeight() {
        return this.weight;
    }

    public void setWeight(int weight) {
        this.weight = weight;
    }

    public String getUserAvatar() {
        return this.userAvatar;
    }

    public void setUserAvatar(String userAvatar) {
        this.userAvatar = userAvatar;
    }

    public String getFamilyGroup() {
        return this.familyGroup;
    }

    public void setFamilyGroup(String familyGroup) {
        this.familyGroup = familyGroup;
    }

    public boolean getSmsAgentEnabled() {
        return this.smsAgentEnabled;
    }

    public void setSmsAgentEnabled(boolean smsAgentEnabled) {
        this.smsAgentEnabled = smsAgentEnabled;
    }

    public int getNotificationChannel() {
        return this.notificationChannel;
    }

    public void setNotificationChannel(int notificationChannel) {
        this.notificationChannel = notificationChannel;
    }

    public boolean getIs_select() {
        return this.is_select;
    }

    public void setIs_select(boolean is_select) {
        this.is_select = is_select;
    }

}
