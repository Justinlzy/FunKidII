package com.cqkct.FunKidII.db.Entity;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 

import com.cqkct.FunKidII.Bean.BaseBean;
import com.google.protobuf.InvalidProtocolBufferException;

import org.greenrobot.greendao.annotation.Entity;
import org.greenrobot.greendao.annotation.Generated;
import org.greenrobot.greendao.annotation.Id;
import org.greenrobot.greendao.annotation.Keep;
import org.greenrobot.greendao.annotation.NotNull;
import org.greenrobot.greendao.annotation.Transient;

import java.io.Serializable;

import protocol.Message;

/**
 * Entity mapped to table FENCE_BEAN.
 */

@Entity
public class FenceEntity implements BaseBean, Serializable {

    private static final long serialVersionUID = 3838104661832567820L;
    @Id(autoincrement = true)
    private Long id;

    @NotNull
    private String deviceId;
    @NotNull
    private String fenceId;
    @NotNull
    private String name;
    @NotNull
    private String timezone;
    @Transient
    private String fenceAddress;


    private byte[] fenceData;

    @Transient
    private Message.Fence fence;


    @Generated(hash = 1078252320)
    public FenceEntity(Long id, @NotNull String deviceId, @NotNull String fenceId, @NotNull String name,
                       @NotNull String timezone, byte[] fenceData) {
        this.id = id;
        this.deviceId = deviceId;
        this.fenceId = fenceId;
        this.name = name;
        this.timezone = timezone;
        this.fenceData = fenceData;
    }

    @Generated(hash = 755409606)
    public FenceEntity() {
    }


    @Keep
    public String getFenceAddress() {
        return fenceAddress;
    }

    @Keep
    public void setFenceAddress(String fenceAddress) {
        this.fenceAddress = fenceAddress;
    }

    // KEEP METHODS - put your custom methods here
    @Override
    @Keep
    public Long getId() {
        return id;
    }

    @Keep
    public Message.Fence getFence() {
        if (fence == null) {
            byte[] data = getFenceData();
            if (data == null) {
                data = new byte[0];
            }
            try {
                fence = Message.Fence.parseFrom(data);
            } catch (InvalidProtocolBufferException e) {
                fence = Message.Fence.newBuilder().build();
            }
        }
        return fence;
    }

    @Keep
    public void setFence(Message.Fence fence) {
        this.fence = fence;
        if (this.fence == null) {
            setFenceId("");
            setName("");
            setTimezone("");
            setFenceData(new byte[0]);
        } else {
            setFenceId(fence.getId());
            setName(fence.getName());
            setTimezone(fence.getTimezone().getZone());
            setFenceData(fence.toByteArray());
        }
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getDeviceId() {
        return this.deviceId;
    }

    public void setDeviceId(String deviceId) {
        this.deviceId = deviceId;
    }

    public String getFenceId() {
        return this.fenceId;
    }

    public void setFenceId(String fenceId) {
        this.fenceId = fenceId;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getTimezone() {
        return this.timezone;
    }

    public void setTimezone(String timezone) {
        this.timezone = timezone;
    }

    public byte[] getFenceData() {
        return this.fenceData;
    }

    public void setFenceData(byte[] fenceData) {
        this.fenceData = fenceData;
    }


}
